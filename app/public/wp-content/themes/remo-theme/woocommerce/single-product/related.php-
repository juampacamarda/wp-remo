<?php
/**
 * Related Products
 *
 * This template can be overridden by copying it to yourtheme/woocommerce/single-product/related.php.
 *
 * HOWEVER, on occasion WooCommerce will need to update template files and you
 * (the theme developer) will need to copy the new files to your theme to
 * maintain compatibility. We try to do this as little as possible, but it does
 * happen. When this occurs the version of the template file will be bumped and
 * the readme will list any important changes.
 *
 * @see         https://docs.woocommerce.com/document/template-structure/
 * @package     WooCommerce\Templates
 * @version     3.9.0
 */

if ( ! defined( 'ABSPATH' ) ) {
	exit;
}

if ( $related_products ) : ?>

	<section class="related products d-none d-lg-block">
		<div class="container">
			<h2><?php esc_html_e( 'Related products', 'woocommerce' ); ?></h2>

			<div>

				<?php
				global $product, $woocommerce_loop;

				if ( empty( $product ) || ! $product->exists() ) {
					return;
				}
				
				$orderby = '';
					if ( $product_cats = get_the_terms( $product->id, 'product_cat' ) ) {
						
						//Product Tags IDs array
						$product_cat_ids = array();
			
						foreach( $product_cats as $product_cat ) {
							$product_cat_ids[] = $product_cat->term_id;
						}
			
						//Create the args
						$count_args = array(
							'post_type'             => 'product',
							'ignore_sticky_posts'   => 1,
							'posts_per_page'        => 4,
							'no_found_rows'         => 1,
							'orderby'               => $orderby,
							'post__not_in'          => array($product->id),
							'tax_query'             => array(array(
															'taxonomy'  => 'product_cat',
															'field'     => 'id',
															'terms'     => $product_cat_ids,
														)),
						);
			
						$query = new WP_Query( $count_args );
					
						//count products with tags
						$count = (int)$query->post_count;
					
						if ( $count == 0 ){
					
							//if no related tags, try categories
							if ($product_tags = get_the_terms($product->id, 'product_tag')) {

								//Product Tags IDs array
								$product_tag_ids = array();
								
								foreach($product_tags as $product_tag) {
									$product_tag_ids[] = $product_tag->term_id;
								}
								
								//Create the args
								$count_args = array(
									'post_type'             => 'product',
									'ignore_sticky_posts'   => 1,
									'posts_per_page'        => 4,
									'no_found_rows'         => 1,
									'orderby'               => $orderby,
									'post__not_in'          => array($product->id),
									'tax_query'             => array(array(
																	'taxonomy'  => 'product_tag',
																	'field'     => 'id',
																	'terms'     => $product_tag_ids,
																)),
								);
								
								$query = new WP_Query( $count_args );
								$count = (int)$query->post_count;
					
								//if no related categories, do nothing.
								if ( $count == 0 ){
					
									return;
					
								} else {
					
									//if related categories, show them
									$args = $count_args;
					
								}
					
							} else {
					
								//if product has tags but no related, and no categories, run default related query
								$related = $product->get_related( 4 );
					
								if ( sizeof( $related ) == 0 ) return;
					
								$args = apply_filters( 'woocommerce_related_products_args', array(
									'post_type'            => 'product',
									'ignore_sticky_posts'  => 1,
									'no_found_rows'        => 1,
									'posts_per_page'       => 4,
									'orderby'              => $orderby,
									'post__in'             => $related,
									'post__not_in'         => array( $product->id )
								) );
					
							}
					
						} else {
					
							//if related tags found, show them
							$args = $count_args;
					
						}
					
					} else {
					
						//product has no tags, run default query
						$related = $product->get_related( 4 );
					
						if ( sizeof( $related ) == 0 ) return;
					
						$args = apply_filters( 'woocommerce_related_products_args', array(
							'post_type'            => 'product',
							'ignore_sticky_posts'  => 1,
							'no_found_rows'        => 1,
							'posts_per_page'       => 4,
							'orderby'              => $orderby,
							'post__in'             => $related,
							'post__not_in'         => array( $product->id )
						) );
					
					}
					
					$products = new WP_Query( $args );
					
					
					
					if ( $products->have_posts() ) : ?>
					<div class="row">
						<?php while ( $products->have_posts() ) : $products->the_post(); ?>

						<div class="col-12 col-md-3 my-3">
							<a class="enlacetienda" href="<?php the_permalink() ?>">
								<div class="card">
									<div class="img-loop-wrap card-img-top">
										<?php
											if ( has_post_thumbnail() && ! post_password_required() ) : 
												$imgURL = wp_get_attachment_url( get_post_thumbnail_id(get_the_ID()) );
										?>
											<img src="<?php echo $imgURL; ?>" alt="" class="img-fluid d-block mx-auto">
										<?php endif; ?>
									</div>
									
									<div class="card-tittle">
										<h5>    
											<?php the_title(); ?>
										</h5>
									</div>
									<div class="boton">
										<p class="btn btn-vita">Ver MÃ¡s</p>
									</div>         

								</div>
							</a>
						</div>

						<?php endwhile; // end of the loop. ?>

					
					</div>
					<?php endif ?>
				

			</div>
		</div>


	</section>
<?php endif;
	wp_reset_postdata(); ?>